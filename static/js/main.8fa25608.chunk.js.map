{"version":3,"sources":["actions/homeActions.js","actions/homeActionTypes.js","components/layout/SearchHeader/HeaderLink.js","components/layout/SearchHeader/SearchByDiv.js","components/layout/SearchHeader.js","components/layout/Footer.js","lib/homepageHelper.js","components/pages/Home.js","lib/detailspageHelper.js","components/pages/Details.js","actions/detailsActions.js","actions/detailsActionTypes.js","serviceWorker.js","reducers/homeReducer.js","reducers/detailsReducer.js","store.js","index.js"],"names":["setGenreMapSuccess","genreMap","type","payload","setGenreMapFail","error","setSearchValue","searchVal","HeaderLink","to","className","Component","SearchByDiv","classes","this","props","Button","variant","searchButton","onClick","searchValue","home","withStyles","theme","container","display","flexWrap","float","textDecoration","backgroundColor","color","border","padding","fontFamily","fontWeight","fontSize","menu","width","customTextunderline","disabled","focused","SearchHeader","onSearchUpdate","event","target","value","TextField","id","label","placeholder","fullWidth","margin","onChange","InputProps","style","underline","InputLabelProps","connect","state","dispatch","borderBottom","Footer","Fragment","CssBaseline","src","alt","homepageHelper","options","cb","sortBy","axios","get","env","then","res","catch","console","log","page","i","Home","process","REACT_APP_API_KEY","isEmpty","map","prop","hasOwnProperty","getAllGenres","tempMap","genreObjs","data","genres","key","toString","name","getFeaturedMovies","setFeaturedListFail","setFeaturedListSuccess","results","searchHandler","setResultPage","length","flipSearchIsEmpty","searchRequest","setShownList","navigatePages","flag","document","getElementById","scrollIntoView","block","behavior","resultPage","searchFilmsFail","setShownListSuccess","setTotalPagesSuccess","total_pages","setTotalResultsSuccess","total_results","searchIsEmpty","sortByRating","flipSortByRating","sortMovies","movies","selector","shownList","featuredList","movie","poster_path","title","release_date","substring","genre_string","genre_id","genre_ids","getGenres","totalResults","visibility","flipSort","totalPages","HomeActions","detailspageHelper","movie_id","Details","allRequests","setSelectedMovieInfoFail","setSelectedMovieInfoSuccess","setSelectedMovieCastFail","setDirectorSuccess","crew","setSelectedMovieCastSuccess","cast","slice","setSimilarMoviesListFail","setSimilarMoviesListSuccess","setMovie","getSelectedMovieYear","details","selectedMovieInfo","getCast","cast_string","cast_member","selectedMovieCast","character","match","params","similarMoviesList","vote_average","runtime","overview","director","DetailsActions","setMovieCreditsFail","Boolean","window","location","hostname","homeReducer","action","detailsReducer","createStore","combineReducers","applyMiddleware","createLogger","routing","store","exact","path","component","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fa25608.chunk.js","sourcesContent":["import * as homeActionTypes from './homeActionTypes';\r\n\r\nexport const setGenreMapSuccess = (genreMap) => {\r\n    return {\r\n        type: homeActionTypes.SET_GENRE_MAP_SUCCESS,\r\n        payload: genreMap\r\n    };\r\n}\r\n\r\nexport const setGenreMapFail = (error) => {\r\n    return {\r\n        type: homeActionTypes.SET_GENRE_MAP_FAIL,\r\n        payload: error\r\n    };\r\n}\r\n\r\nexport const setFeaturedListSuccess = (featuredList) => {\r\n    return {\r\n        type: homeActionTypes.SET_FEATURED_LIST_SUCCESS,\r\n        payload: featuredList\r\n    };\r\n}\r\n\r\nexport const setFeaturedListFail = (error) => {\r\n    return {\r\n        type: homeActionTypes.SET_FEATURED_LIST_FAIL,\r\n        payload: error\r\n    };\r\n}\r\n\r\nexport const setShownListSuccess = (shownList) => {\r\n    return {\r\n        type: homeActionTypes.SET_SHOWN_LIST_SUCCESS,\r\n        payload: shownList\r\n    };\r\n}\r\n\r\nexport const setTotalPagesSuccess = (totalPages) => {\r\n    return {\r\n        type: homeActionTypes.SET_TOTAL_PAGES_SUCCESS,\r\n        payload: totalPages\r\n    };\r\n}\r\n\r\nexport const setTotalResultsSuccess = (totalResults) => {\r\n    return {\r\n        type: homeActionTypes.SET_TOTAL_RESULTS_SUCCESS,\r\n        payload: totalResults\r\n    };\r\n}\r\n\r\nexport const searchFilmsFail = (error) => {\r\n    return {\r\n        type: homeActionTypes.SEARCH_FILMS_FAIL,\r\n        payload: error\r\n    };\r\n}\r\n\r\nexport const flipSearchIsEmpty = (searchIsEmpty) => {\r\n    return {\r\n        type: homeActionTypes.SEARCH_ISEMPTY,\r\n        payload: searchIsEmpty\r\n    };\r\n}\r\n\r\nexport const flipSortByRating = (sortByRating) => {\r\n    return {\r\n        type: homeActionTypes.SORTBY_RATING,\r\n        payload: sortByRating\r\n    };\r\n}\r\n\r\nexport const setSearchValue = (searchVal) => {\r\n    return {\r\n        type: homeActionTypes.SET_SEARCH_VAL,\r\n        payload: searchVal\r\n    };\r\n}\r\n\r\nexport const setResultPage = (resultPage) => {\r\n    return {\r\n        type: homeActionTypes.SET_RESULT_PAGE,\r\n        payload: resultPage\r\n    };\r\n}","export const SET_GENRE_MAP_SUCCESS = 'SET_GENRE_MAP_SUCCESS';\r\nexport const SET_GENRE_MAP_FAIL = 'SET_GENRE_MAP_FAIL';\r\n\r\nexport const SET_FEATURED_LIST_SUCCESS = 'SET_FEATURED_LIST_SUCCESS';\r\nexport const SET_FEATURED_LIST_FAIL = 'SET_FEATURED_LIST_FAIL';\r\n\r\nexport const SET_SHOWN_LIST_SUCCESS = 'SET_SHOWN_LIST_SUCCESS';\r\nexport const SET_TOTAL_PAGES_SUCCESS = 'SET_TOTAL_PAGES_SUCCESS';\r\nexport const SET_TOTAL_RESULTS_SUCCESS = 'SET_TOTAL_RESULTS_SUCCESS';\r\nexport const SEARCH_FILMS_FAIL = 'SEARCH_FILMS_FAIL';\r\n\r\nexport const SEARCH_ISEMPTY = 'SEARCH_ISEMPTY';\r\n\r\nexport const SORTBY_RATING = 'SORTBY_RATING';\r\n\r\nexport const SET_SEARCH_VAL = 'SET_SEARCH_VAL';\r\n\r\nexport const SET_RESULT_PAGE = 'SET_RESULT_PAGE';","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HeaderLink extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <Link to=\"/\">\r\n                <title className=\"filmSearchTitle\">\r\n                    filmSearch\r\n                </title>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderLink","import React, { Component } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    searchButton:{\r\n      float: 'right',\r\n      textDecoration: 'none',\r\n      backgroundColor: '#EB5757',\r\n      color: '#F5F5F5',\r\n      border: 'none',\r\n      padding: '5px 70px',\r\n      fontFamily: 'Arial',\r\n      fontWeight: 'bold',\r\n      fontSize: '20px',\r\n      '&:hover': {\r\n        backgroundColor: '#E86D6D',\r\n      },\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    customTextunderline: {},\r\n    disabled: {},\r\n    focused: {},\r\n    error: {},\r\n});\r\n\r\nclass SearchByDiv extends Component {\r\n    \r\n    render () {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n\r\n            <div className=\"searchByDiv\">\r\n                    \r\n                <Button variant='contained' className={classes.searchButton} onClick={()=>this.props.searchValue(this.props.home.searchVal)}>\r\n                    SEARCH\r\n                </Button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SearchByDiv)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import Button from '@material-ui/core/Button';\r\n\r\nimport { setSearchValue } from '../../actions/homeActions'\r\nimport HeaderLink from './SearchHeader/HeaderLink'\r\nimport SearchByDiv from './SearchHeader/SearchByDiv';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  searchButton:{\r\n    float: 'right',\r\n    textDecoration: 'none',\r\n    backgroundColor: '#EB5757',\r\n    color: '#F5F5F5',\r\n    border: 'none',\r\n    padding: '5px 70px',\r\n    fontFamily: 'Arial',\r\n    fontWeight: 'bold',\r\n    fontSize: '20px',\r\n    '&:hover': {\r\n      backgroundColor: '#E86D6D',\r\n    },\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  customTextunderline: {\r\n    '&:before': {\r\n      borderBottom: '2px solid white'\r\n    },\r\n    '&:hover:not($disabled):not($focused):not($error):before': {\r\n      borderBottom: '2px solid white'\r\n    },\r\n    '&:after': {\r\n      borderBottom: '3px solid red'\r\n    }\r\n  },\r\n  disabled: {},\r\n  focused: {},\r\n  error: {},\r\n});\r\n\r\nclass SearchHeader extends Component {\r\n  \r\n  onSearchUpdate = (event) => {\r\n    this.props.setSearchValue(event.target.value);\r\n  }\r\n  \r\n  render() {\r\n    \r\n    const { classes } = this.props;\r\n    \r\n    return (\r\n      <header className=\"blackBackground\">\r\n        <div className='pictureStyle'>\r\n\r\n          <HeaderLink />\r\n\r\n          <h2 className=\"findYourMovie\">FIND YOUR MOVIE</h2>\r\n          <TextField\r\n            id='filled-search'\r\n            label='Click here to search by movie name '\r\n            placeholder='Search.. ┌(▀Ĺ̯ ▀-͠ )┐'\r\n            type='search'\r\n            fullWidth\r\n            margin='normal'\r\n            variant='filled'\r\n            onChange={this.onSearchUpdate}\r\n            InputProps={{\r\n              style: {\r\n                color: 'white',\r\n                backgroundColor: 'black',\r\n              },\r\n              classes: {\r\n                underline: classes.customTextunderline\r\n              }\r\n            }}\r\n            InputLabelProps={{\r\n              style: { color: '#828282' },\r\n            }}\r\n          />\r\n\r\n          {/* <div className=\"searchByDiv\">\r\n                    \r\n            <Button variant='contained' className={classes.searchButton} onClick={()=>this.props.searchValue(this.props.home.searchVal)}>\r\n              SEARCH\r\n            </Button>\r\n\r\n          </div> */}\r\n\r\n          <SearchByDiv searchValue={this.props.home.searchVal}/>\r\n            \r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nSearchHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    home: state.home\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setSearchValue: (searchVal) => {\r\n      dispatch(setSearchValue(searchVal));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SearchHeader));","import React from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <footer className=\"footerStyle\">\r\n        <span>filmSearch ⓒ 2019 built with</span>\r\n        <img className=\"tmdbStyle\" src=\"https://www.themoviedb.org/assets/2/v4/logos/408x161-powered-by-rectangle-green-bb4301c10ddc749b4e79463811a68afebeae66ef43d17bcfd8ff0e60ded7ce99.png\" alt=\"\" />\r\n      </footer>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Footer;","import axios from 'axios';\r\n\r\nexport const homepageHelper = {\r\n\r\n  getFeaturedMovies: (options, cb) => {\r\n\r\n    let sortBy = options.sortBy ? options.sortBy : 'popularity.desc';\r\n\r\n    axios.get(`https://api.themoviedb.org/3/discover/movie?sort_by=${sortBy}&language=en-US&page=1&api_key=${options.env}`)\r\n      .then(res => {\r\n        cb(res);\r\n      })\r\n      .catch(error => {\r\n        let errorMsg = \"Error occurred on getFeaturedMovies() src/lib/homepageHelper\";\r\n        console.log(error);\r\n        cb(error, errorMsg);\r\n      });\r\n\r\n  },\r\n  \r\n  getAllGenres: (options, cb) => {\r\n\r\n    axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${options.env}&language=en-US`)\r\n      .then(res => {\r\n        cb(res);\r\n      })\r\n      .catch(error => {\r\n        let errorMsg = \"Error occurred on getAllGenres() src/lib/homepageHelper\";\r\n        console.log(error);\r\n        cb(error, errorMsg);\r\n      });\r\n\r\n  },\r\n  \r\n  searchFilms: (options, value, page, cb) => {\r\n\r\n    axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${options.env}&language=en-US&query=${value}&page=${page}&include_adult=false`)\r\n      .then(res => {\r\n        cb(res);\r\n      })\r\n      .catch(error => {\r\n        let errorMsg = \"Error occurred on searchFilms() src/lib/homepageHelper\";\r\n        console.log(error);\r\n        cb(error, errorMsg);\r\n      });\r\n\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport SearchHeader from '../layout/SearchHeader';\r\nimport Footer from '../layout/Footer';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { homepageHelper } from '../../lib/homepageHelper';\r\nimport * as HomeActions from '../../actions/homeActions';\r\n\r\nclass Home extends Component {\r\n\r\n  options = {\r\n    env: process.env.REACT_APP_API_KEY,\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n\r\n    if (this.isEmpty(this.props.home.genreMap)) {\r\n\r\n      this.getAllGenres();\r\n    \r\n    }\r\n\r\n  }\r\n  \r\n  componentDidMount() {\r\n\r\n    this.getFeaturedMovies();\r\n  \r\n  }\r\n\r\n  isEmpty = (map) => {\r\n\r\n    for (let prop in map) {\r\n        if (map.hasOwnProperty(prop)) return false;\r\n    }\r\n\r\n    return true;\r\n  \r\n  }\r\n  \r\n  getAllGenres = () => {\r\n    \r\n    homepageHelper.getAllGenres(this.options, (res, error) => {\r\n\r\n      if (error) {\r\n\r\n        this.props.setGenreMapFail(error);\r\n\r\n      } else {\r\n        \r\n        let tempMap = {}\r\n        let genreObjs = res.data.genres;\r\n        \r\n        for (let i in genreObjs) {\r\n          let key = genreObjs[i].id.toString();\r\n          let value = genreObjs[i].name;\r\n          tempMap[key] = value;\r\n        }\r\n        \r\n        this.props.setGenreMapSuccess(tempMap);\r\n\r\n      }\r\n\r\n    });\r\n    \r\n  }\r\n\r\n  getFeaturedMovies = () => {\r\n\r\n    homepageHelper.getFeaturedMovies(this.options, (res, error) => {\r\n\r\n      if(error){\r\n\r\n        this.props.setFeaturedListFail(error);\r\n\r\n      } else {\r\n\r\n        this.props.setFeaturedListSuccess(res.data.results);\r\n      \r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  searchRequest(value) {\r\n    \r\n    homepageHelper.searchFilms(this.options, value, this.props.home.resultPage, (res, error) => {\r\n\r\n      if (error) {\r\n\r\n        this.props.searchFilmsFail(error);\r\n\r\n      } else {\r\n\r\n        this.props.setShownListSuccess(res.data.results);\r\n        this.props.setTotalPagesSuccess(res.data.total_pages);\r\n        this.props.setTotalResultsSuccess(res.data.total_results); \r\n\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  sortMovies(flag) {\r\n\r\n    let options = flag === 'rate' ? \r\n      this.options.sortBy = 'popularity.desc' : \r\n      this.options.sortBy = 'release_date.desc';\r\n    \r\n    if (this.props.home.searchIsEmpty) {\r\n\r\n      homepageHelper.getFeaturedMovies(this.options, (res, error)=>{\r\n        if(error){\r\n          this.props.setFeaturedListFail(error);\r\n        } else {\r\n          this.props.setFeaturedListSuccess(res.data.results);\r\n        }\r\n      });\r\n      \r\n    } else {\r\n      \r\n      homepageHelper.searchFilms(options, this.props.home.searchVal, this.props.home.resultPage, (res) => {\r\n\r\n        this.props.setShownList(res.data.results);\r\n      \r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n  flipSort(flag) {\r\n\r\n    this.props.home.sortByRating ? this.props.flipSortByRating(false) : this.props.flipSortByRating(true);\r\n    this.sortMovies(flag);\r\n\r\n  }\r\n  \r\n  searchHandler = async (value) => {\r\n\r\n    await this.props.setResultPage(1)\r\n    value.length ? this.props.flipSearchIsEmpty(false) : this.props.flipSearchIsEmpty(true);\r\n    value.length ? this.props.setSearchValue(value) : this.props.setSearchValue('');\r\n    value.length ? this.searchRequest(value) : this.props.setShownList([]);\r\n\r\n  }\r\n\r\n  navigatePages = async (flag) => {\r\n    \r\n    document.getElementById(\"resultsElement\").scrollIntoView({block:'start',behavior:'smooth'});\r\n    \r\n      if (flag === \"back\") {\r\n\r\n        await this.props.setResultPage(this.props.home.resultPage - 1)\r\n\r\n      } else if (flag === \"forward\") {\r\n\r\n        await this.props.setResultPage(this.props.home.resultPage + 1)\r\n\r\n      }\r\n    \r\n    this.searchRequest(this.props.home.searchVal);\r\n\r\n  }\r\n\r\n  render() {\r\n    \r\n    let movies;\r\n    let selector = this.props.home.shownList.length ? this.props.home.shownList : this.props.home.featuredList;\r\n    \r\n    let getYear = ({movie}) => {\r\n\r\n      let year_string = '' + movie.release_date;\r\n      return year_string.substring(0, 4);\r\n\r\n    }\r\n\r\n    let getGenres = ({movie}) => {\r\n\r\n      let genre_string = '';\r\n      for (let genre_id in movie.genre_ids) {\r\n\r\n        genre_string += this.props.home.genreMap[movie.genre_ids[genre_id]] + \", \";\r\n\r\n      }\r\n\r\n      return genre_string.substring(0, genre_string.length - 2);\r\n\r\n    }\r\n\r\n    movies = selector.map(function(movie, i) {\r\n\r\n      return (\r\n        <div className=\"resultItemStyle\" key={i}>\r\n          <Link to={`/details/${movie.id}`}>\r\n            <img src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${movie.poster_path}`} alt=\"\" />\r\n          </Link>\r\n        \r\n          <div className=\"movieTextStyle\">\r\n            <div className=\"movieFlexStyle\">\r\n              <div className=\"movieTitleStyle\">{movie.title}</div>\r\n              <div className=\"movieYearStyle\">{getYear({movie})}</div>\r\n            </div>\r\n            <span className=\"movieGenreStyle\">{getGenres({movie})}</span>\r\n          </div>\r\n        </div>\r\n      )\r\n      \r\n    })\r\n\r\n    return (\r\n      \r\n      <React.Fragment>\r\n        <CssBaseline />\r\n      \r\n        <div className=\"App\">\r\n      \r\n          <SearchHeader searchValue={this.searchHandler}/>\r\n      \r\n          <div className=\"resultsInfoStyle\">\r\n            <div className=\"resultsInfoWidth\">\r\n      \r\n              <span className=\"moviesFoundStyle\">\r\n                {\r\n                  this.props.home.searchIsEmpty ? \r\n\r\n                  <span>Featured Movies</span>\r\n                  : \r\n                  <span>{this.props.home.totalResults} movies found</span>\r\n                }\r\n              </span>\r\n      \r\n              <div className=\"sortByStyle\" style={{ visibility: this.props.home.searchIsEmpty ? 'visible' : 'hidden' }} >\r\n                <div className=\"sortByLabelStyle\">Sort by</div>\r\n                {\r\n                  this.props.home.sortByRating ? \r\n                  \r\n                  <div className=\"inlineStyle\">\r\n                    <span className=\"disabledStyle\" onClick={ () => this.flipSort('date') } >release date </span> | \r\n                    <span className=\"enabledStyle\"> rating</span>\r\n                  </div>\r\n                  : \r\n                  <div className=\"inlineStyle\">\r\n                    <span className=\"enabledStyle\">release date </span> | \r\n                    <span className=\"disabledStyle\" onClick={ () => this.flipSort('rate') } > rating</span>\r\n                  </div>\r\n                }\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n          {\r\n            this.props.home.shownList.length === 0 && !this.props.home.searchIsEmpty ? \r\n          \r\n            <div className=\"noMoviesStyle\">\r\n              <h1>No Films Found!! ʸ(➜◡ु⚈᷉)♡⃛</h1>\r\n              <h2>Try another search</h2>\r\n            </div>\r\n            : \r\n            <div className=\"resultsStyle\" id=\"resultsElement\">\r\n              {movies}\r\n            </div>\r\n          }\r\n        </div>\r\n          \r\n        <div className=\"paginationStyle\">\r\n          {\r\n            this.props.home.resultPage === 1  ? \r\n            null\r\n            : \r\n            <Button className=\"displayNav\" onClick={ () => this.navigatePages('back') }> back </Button>\r\n          }\r\n          Page {this.props.home.resultPage} of {this.props.home.totalPages ? this.props.home.totalPages : 1}\r\n          {\r\n            this.props.home.resultPage === this.props.home.totalPages  ? \r\n            null\r\n            : \r\n            <Button className=\"displayNav\" onClick={ () => this.navigatePages('forward') }> next </Button>\r\n          }\r\n        </div>\r\n          \r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    home: state.home\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n\r\n    setGenreMapSuccess: (genreMap) => {dispatch(HomeActions.setGenreMapSuccess(genreMap))},\r\n    setGenreMapFail: (error) => {dispatch(HomeActions.setGenreMapFail(error))},\r\n    \r\n    setFeaturedListSuccess: (featuredList) => {dispatch(HomeActions.setFeaturedListSuccess(featuredList))},\r\n    setFeaturedListFail: (error) => {dispatch(HomeActions.setFeaturedListFail(error))},\r\n\r\n    setShownListSuccess: (shownList) => {dispatch(HomeActions.setShownListSuccess(shownList))},\r\n    setTotalPagesSuccess: (totalPages) => {dispatch(HomeActions.setTotalPagesSuccess(totalPages))},\r\n    setTotalResultsSuccess: (totalResults) => {dispatch(HomeActions.setTotalResultsSuccess(totalResults))},\r\n\r\n    searchFilmsFail: (error) => {dispatch(HomeActions.searchFilmsFail(error))},\r\n\r\n    flipSearchIsEmpty: (searchIsEmpty) => {\r\n      dispatch(HomeActions.flipSearchIsEmpty(searchIsEmpty));\r\n    },\r\n    flipSortByRating: (sortByRating) => {\r\n      dispatch(HomeActions.flipSortByRating(sortByRating));\r\n    },\r\n    setSearchValue: (searchVal) => {\r\n      dispatch(HomeActions.setSearchValue(searchVal));\r\n    },\r\n    setResultPage: (resultPage) => {\r\n      dispatch(HomeActions.setResultPage(resultPage));\r\n    },\r\n    \r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import axios from 'axios';\r\n\r\nexport const detailspageHelper = {\r\n\r\n  getAllGenres: (options, cb) => {\r\n\r\n    axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${options.env}&language=en-US`)\r\n      .then(res => {\r\n        cb(res);\r\n      })\r\n      .catch(error => {\r\n        let errorMsg = \"Error occurred on getAllGenres() src/lib/detailspageHelper\";\r\n        console.log(error);\r\n        cb(error, errorMsg);\r\n      });\r\n\r\n  },\r\n\r\n  getMovieInfo: (options, cb) => {\r\n\r\n    axios.get(`https://api.themoviedb.org/3/movie/${options.movie_id}?api_key=${options.env}&language=en-US`)\r\n      .then(res => {\r\n        cb(res);\r\n      })\r\n      .catch(error => {\r\n        let errorMsg = \"Error occurred on getMovieInfo() src/lib/detailspageHelper\";\r\n        console.log(error);\r\n        cb(error, errorMsg);\r\n      });\r\n      \r\n  },\r\n\r\n  getMovieCredits: (options, cb) => {\r\n\r\n    axios.get(`https://api.themoviedb.org/3/movie/${options.movie_id}/credits?api_key=${options.env}`)\r\n      .then(res => {\r\n        cb(res);\r\n      })\r\n      .catch(error => {\r\n        let errorMsg = \"Error occurred on getMovieCredits() src/lib/detailspageHelper\";\r\n        console.log(error);\r\n        cb(error, errorMsg);\r\n      });\r\n\r\n  },\r\n\r\n  getSimilarMovies: (options, cb) => {\r\n\r\n    axios.get(`https://api.themoviedb.org/3/movie/${options.movie_id}/similar?api_key=${options.env}&language=en-US&page=1`)\r\n      .then(res => {\r\n        cb(res);\r\n      })\r\n      .catch(error => {\r\n        let errorMsg = \"Error occurred on getSimilarMovies() src/lib/detailspageHelper\";\r\n        console.log(error);\r\n        cb(error, errorMsg);\r\n      });\r\n      \r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Footer from '../layout/Footer';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { detailspageHelper } from '../../lib/detailspageHelper';\r\nimport { setGenreMapSuccess, setGenreMapFail } from '../../actions/homeActions';\r\nimport * as DetailsActions from '../../actions/detailsActions'\r\n\r\nclass Details extends Component {\r\n\r\n  options = { }\r\n\r\n  constructor(props) {\r\n    \r\n    super(props);\r\n\r\n    this.options = {\r\n\r\n      env: process.env.REACT_APP_API_KEY,\r\n      movie_id: this.props.match.params.id\r\n      \r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    if (this.isEmpty(this.props.home.genreMap)) {\r\n\r\n      this.getAllGenres();\r\n\r\n    }\r\n\r\n    this.allRequests();\r\n\r\n  }\r\n\r\n  isEmpty = (map) => {\r\n\r\n    for (let prop in map) {\r\n        if (map.hasOwnProperty(prop)) return false;\r\n    }\r\n\r\n    return true;\r\n  \r\n  }\r\n\r\n  getAllGenres = () => {\r\n  \r\n    detailspageHelper.getAllGenres(this.options, (res, error) => {\r\n\r\n      if (error){\r\n\r\n        this.props.setGenreMapFail(error);\r\n\r\n      } else {\r\n        \r\n        let tempMap = {}\r\n        let genreObjs = res.data.genres;\r\n        \r\n        for (let i in genreObjs) {\r\n          let key = genreObjs[i].id.toString();\r\n          let value = genreObjs[i].name;\r\n          tempMap[key] = value;\r\n        }\r\n        \r\n        this.props.setGenreMapSuccess(tempMap);\r\n\r\n      }\r\n\r\n    });\r\n    \r\n  }\r\n\r\n  allRequests = () => {\r\n    \r\n    document.getElementById(\"topElement\").scrollIntoView({block:'start',behavior:'smooth'});\r\n\r\n    detailspageHelper.getMovieInfo(this.options, (res, error) => {\r\n\r\n      if (error) {\r\n\r\n        this.props.setSelectedMovieInfoFail(error);\r\n\r\n      } else {\r\n\r\n        this.props.setSelectedMovieInfoSuccess(res.data);\r\n      \r\n      }\r\n\r\n    });\r\n\r\n    detailspageHelper.getMovieCredits(this.options, (res, error) => {\r\n\r\n      if (error) {\r\n\r\n        this.props.setSelectedMovieCastFail(error);\r\n\r\n      } else {\r\n\r\n        this.props.setDirectorSuccess(res.data.crew[0].name);\r\n        this.props.setSelectedMovieCastSuccess(res.data.cast.slice(1,10));\r\n      \r\n      }\r\n\r\n    });\r\n\r\n    detailspageHelper.getSimilarMovies(this.options, (res, error) => {\r\n\r\n      if (error) {\r\n        \r\n        this.props.setSimilarMoviesListFail(error);\r\n\r\n      } else {\r\n \r\n        this.props.setSimilarMoviesListSuccess(res.data.results);\r\n\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  setMovie = (movie) => {\r\n\r\n    this.options.movie_id = movie.id;\r\n    this.allRequests();\r\n\r\n  } \r\n\r\n  getSelectedMovieYear = () => {\r\n\r\n    let year_string = '' + this.props.details.selectedMovieInfo.release_date;\r\n    return year_string.substring(0, 4);\r\n\r\n  }\r\n\r\n  getCast = () => {\r\n\r\n    let cast_string = '';\r\n    for (let cast_member in this.props.details.selectedMovieCast) {\r\n      cast_string += this.props.details.selectedMovieCast[cast_member].character + \", \";\r\n    }\r\n    return cast_string.substring(0, cast_string.length - 2);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    let getYear = ({movie}) => {\r\n\r\n      let year_string = '' + movie.release_date;\r\n      return year_string.substring(0, 4);\r\n\r\n    };\r\n\r\n    let getGenres = ({movie}) => {\r\n\r\n      let genre_string = '';\r\n      for (let genre_id in movie.genre_ids) {\r\n\r\n        genre_string += this.props.home.genreMap[movie.genre_ids[genre_id]] + \", \";\r\n\r\n      }\r\n\r\n      return genre_string.substring(0, genre_string.length - 2);\r\n\r\n    };\r\n\r\n    let movies = this.props.details.similarMoviesList.map((movie, i) => {\r\n\r\n      return (\r\n        <div className=\"resultItemStyle\" key={i}>\r\n\r\n          <Link to={`/details/${movie.id}`} onClick={ () => \r\n            this.setMovie(movie)\r\n          }>\r\n            <img src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${movie.poster_path}`} alt=\"\" />\r\n          </Link>\r\n\r\n          <div className=\"movieTextStyle\">\r\n            <div className=\"movieFlexStyle\">\r\n              <div className=\"movieTitleStyle\">{movie.title}</div>\r\n              <div className=\"movieYearStyle\">{getYear({movie})}</div>\r\n            </div>\r\n            <span className=\"movieGenreStyle\">{getGenres({movie})}</span>\r\n          </div>\r\n\r\n        </div>\r\n      )\r\n\r\n    });\r\n\r\n    return (\r\n\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <div className=\"App\">\r\n\r\n          <header className=\"detailsBlackBackground\" id=\"topElement\">\r\n            <div className=\"detailsPictureStyle\">\r\n\r\n              <div>                \r\n                <title className=\"filmSearchTitle\">\r\n                    filmSearch\r\n                </title>\r\n                <Link to=\"/\">\r\n                    <Button variant=\"contained\" className=\"backToSearchButton\">\r\n                        BACK TO SEARCH\r\n                    </Button>\r\n                </Link>\r\n              </div>\r\n\r\n              <div className='movieContent'>\r\n                <img className=\"movieContentImg\" src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${this.props.details.selectedMovieInfo.poster_path}`} alt=\"\" />\r\n                <div className=\"movieContentInfo\">\r\n                  <div className=\"titleAndRating\">\r\n                    <h1 className=\"movieTitleHeader\">{this.props.details.selectedMovieInfo.title}</h1>\r\n                    <div className=\"ratingStyle\">{this.props.details.selectedMovieInfo.vote_average}</div>\r\n                  </div>\r\n                  <h2 className=\"yearAndLength\">{this.getSelectedMovieYear()} | {this.props.details.selectedMovieInfo.runtime} minutes</h2>\r\n                  <p className=\"descStyle\">{this.props.details.selectedMovieInfo.overview}</p>\r\n                  <p className=\"directorAndCast\">\r\n                    Director: {this.props.details.director}\r\n                  </p>\r\n                  <p className=\"directorAndCast\">\r\n                    Cast: {this.getCast()}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </header>\r\n\r\n          <div className=\"resultsInfoStyle\">\r\n            <div className=\"resultsInfoWidth\">\r\n              Similar Movies\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"resultsStyle\">\r\n            {movies}\r\n          </div>\r\n\r\n          <Footer />\r\n        </div>\r\n      </React.Fragment>\r\n\r\n    );\r\n  } \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    home: state.home,\r\n    details: state.details\r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n    setGenreMapSuccess: (genreMap) => {dispatch(setGenreMapSuccess(genreMap))},\r\n    setGenreMapFail: (error) => {dispatch(setGenreMapFail(error))},\r\n\r\n    setSimilarMoviesListSuccess: (similarMoviesList) => {dispatch(DetailsActions.setSimilarMoviesListSuccess(similarMoviesList))},\r\n    setSimilarMoviesListFail: (error) => {dispatch(DetailsActions.setSimilarMoviesListFail(error))},\r\n\r\n    setSelectedMovieInfoSuccess: (selectedMovieInfo) => {dispatch(DetailsActions.setSelectedMovieInfoSuccess(selectedMovieInfo))},\r\n    setSelectedMovieInfoFail: (error) => {dispatch(DetailsActions.setSelectedMovieInfoFail(error))},\r\n\r\n    setSelectedMovieCastSuccess: (selectedMovieCast) => {dispatch(DetailsActions.setSelectedMovieCastSuccess(selectedMovieCast))},\r\n    setDirectorSuccess: (director) => {dispatch(DetailsActions.setDirectorSuccess(director))},\r\n    setMovieCreditsFail: (error) => {dispatch(DetailsActions.setMovieCreditsFail(error))},\r\n  };\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Details);\r\n","import * as detailsActionTypes from './detailsActionTypes';\r\n\r\nexport function setSimilarMoviesListSuccess(similarMoviesList) {\r\n    return {\r\n        type: detailsActionTypes.SET_SIMILAR_MOVIES_LIST_SUCCESS,\r\n        payload: similarMoviesList\r\n    };\r\n}\r\n\r\nexport function setSimilarMoviesListFail(error) {\r\n    return {\r\n        type: detailsActionTypes.SET_SIMILAR_MOVIES_LIST_FAIL,\r\n        payload: error\r\n    };\r\n}\r\n\r\nexport function setSelectedMovieInfoSuccess(selectedMovieInfo) {\r\n    return {\r\n        type: detailsActionTypes.SET_SELECTED_MOVIE_INFO_SUCCESS,\r\n        payload: selectedMovieInfo\r\n    };\r\n}\r\n\r\nexport function setSelectedMovieInfoFail(error) {\r\n    return {\r\n        type: detailsActionTypes.SET_SELECTED_MOVIE_INFO_FAIL,\r\n        payload: error\r\n    };\r\n}\r\n\r\nexport function setSelectedMovieCastSuccess(selectedMovieCast) {\r\n    return {\r\n        type: detailsActionTypes.SET_SELECTED_MOVIE_CAST_SUCCESS,\r\n        payload: selectedMovieCast\r\n    };\r\n}\r\n\r\nexport function setDirectorSuccess(director) {\r\n    return {\r\n        type: detailsActionTypes.SET_DIRECTOR_SUCCESS,\r\n        payload: director\r\n    };\r\n}\r\n\r\nexport function setMovieCreditsFail(error) {\r\n    return {\r\n        type: detailsActionTypes.SET_MOVIE_CREDITS_FAIL,\r\n        payload: error\r\n    };\r\n}","export const SET_SIMILAR_MOVIES_LIST_SUCCESS = 'SET_SIMILAR_MOVIES_LIST_SUCCESS';\r\nexport const SET_SIMILAR_MOVIES_LIST_FAIL = 'SET_SIMILAR_MOVIES_LIST_FAIL';\r\n\r\nexport const SET_SELECTED_MOVIE_INFO_SUCCESS = \"SET_SELECTED_MOVIE_INFO_SUCCESS\"\r\nexport const SET_SELECTED_MOVIE_INFO_FAIL = \"SET_SELECTED_MOVIE_INFO_FAIL\"\r\n\r\nexport const SET_SELECTED_MOVIE_CAST_SUCCESS = \"SET_SELECTED_MOVIE_CAST_SUCCESS\"\r\nexport const SET_DIRECTOR_SUCCESS = \"SET_DIRECTOR_SUCCESS\"\r\nexport const SET_MOVIE_CREDITS_FAIL = \"SET_MOVIE_CREDITS_FAIL\"","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const homeReducer = (state = {\r\n        genreMap: {},\r\n        featuredList: [],\r\n        shownList: [],\r\n        totalPages: 1,\r\n        totalResults: 0,\r\n        searchIsEmpty: true,\r\n        sortByRating: true,\r\n        searchVal: '',\r\n        resultPage: 1,\r\n    }, action = {}) => {\r\n        switch (action.type) {\r\n            case \"SET_GENRE_MAP_SUCCESS\":\r\n                state = {\r\n                    ...state,\r\n                    genreMap: action.payload\r\n                };\r\n                break;\r\n            case \"SET_GENRE_MAP_FAIL\":\r\n                state = {\r\n                    ...state\r\n                };\r\n                break;\r\n            case \"SET_FEATURED_LIST_SUCCESS\":\r\n                state = {\r\n                    ...state,\r\n                    featuredList: action.payload\r\n                };\r\n                break; \r\n            case \"SET_FEATURED_LIST_FAIL\":\r\n                state = {\r\n                    ...state\r\n                };\r\n                break;\r\n            case \"SET_SHOWN_LIST_SUCCESS\":\r\n                state = {\r\n                    ...state,\r\n                    shownList: action.payload\r\n                };\r\n                break;\r\n            case \"SET_TOTAL_PAGES_SUCCESS\":\r\n                state = {\r\n                    ...state,\r\n                    totalPages: action.payload\r\n                };\r\n                break;\r\n            case \"SET_TOTAL_RESULTS_SUCCESS\":\r\n                state = {\r\n                    ...state,\r\n                    totalResults: action.payload\r\n                };\r\n                break;\r\n            case \"SEARCH_FILMS_FAIL\":\r\n                state = {\r\n                    ...state\r\n                };\r\n                break;\r\n            case \"SEARCH_ISEMPTY\":\r\n                state = {\r\n                    ...state,\r\n                    searchIsEmpty: action.payload\r\n                };\r\n                break;\r\n            case \"SORTBY_RATING\":\r\n                state = {\r\n                    ...state,\r\n                    sortByRating: action.payload\r\n                };\r\n                break;\r\n            case \"SET_SEARCH_VAL\":\r\n                state = {\r\n                    ...state,\r\n                    searchVal: action.payload\r\n                };\r\n                break;\r\n            case \"SET_RESULT_PAGE\":\r\n                state = {\r\n                    ...state,\r\n                    resultPage: action.payload\r\n                };\r\n                break;\r\n            default:\r\n                return state;\r\n        };\r\n    return state;\r\n};\r\n\r\nexport default homeReducer;","const detailsReducer = (state = {\r\n        similarMoviesList: [],\r\n        selectedMovieInfo: {},\r\n        selectedMovieCast: [],\r\n        director: '',\r\n    }, action = {}) => {\r\n        switch (action.type) {\r\n            case \"SET_SIMILAR_MOVIES_LIST_SUCCESS\": \r\n                state = {\r\n                    ...state,\r\n                    similarMoviesList: action.payload\r\n                };\r\n                break;\r\n            case \"SET_SIMILAR_MOVIES_LIST_FAIL\": \r\n                state = {\r\n                    ...state\r\n                };\r\n                break;\r\n            case \"SET_SELECTED_MOVIE_INFO_SUCCESS\": \r\n                state = {\r\n                    ...state,\r\n                    selectedMovieInfo: action.payload\r\n                };\r\n                break;\r\n            case \"SET_SELECTED_MOVIE_INFO_FAIL\": \r\n                state = {\r\n                    ...state\r\n                };\r\n                break;\r\n            case \"SET_SELECTED_MOVIE_CAST_SUCCESS\": \r\n                state = {\r\n                    ...state,\r\n                    selectedMovieCast: action.payload\r\n                };\r\n                break;\r\n            case \"SET_DIRECTOR_SUCCESS\":\r\n                state = {\r\n                    ...state,\r\n                    director: action.payload\r\n                };\r\n                break;\r\n            case \"SET_MOVIE_CREDITS_FAIL\":\r\n                state = {\r\n                    ...state\r\n                };\r\n                break;\r\n            default:\r\n                return state;\r\n        };\r\n    return state;\r\n};\r\n\r\nexport default detailsReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nimport homeReducer from './reducers/homeReducer';\r\nimport detailsReducer from './reducers/detailsReducer';\r\n\r\nexport default createStore(\r\n    combineReducers({\r\n        home: homeReducer, \r\n        details: detailsReducer\r\n    }), \r\n    {}, \r\n    applyMiddleware(createLogger())\r\n);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport Home from './components/pages/Home'\r\nimport Details from './components/pages/Details'\r\nimport './App.css'\r\n\r\nimport 'typeface-roboto';\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport store from './store';\r\n\r\nconst routing = (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/details/:id\" component={Details} />\r\n      </div>\r\n    </Router>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(\r\n  routing, \r\n  window.document.getElementById('root')\r\n)\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}